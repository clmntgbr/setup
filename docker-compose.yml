version: '3.5'

services:
  rabbitmq:
    restart: unless-stopped
    container_name: setup_rabbitmq
    image: rabbitmq:3-management
    hostname: rabbitmq
    networks:
      - traefik
      - service
    ports:
      - "25672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.traefik.me`)"
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  maildev:
    restart: unless-stopped
    container_name: setup_maildev
    image: maildev/maildev
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    networks:
      - traefik
      - service
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.maildev.rule=Host(`maildev.traefik.me`)"
      - "traefik.http.routers.maildev.tls=true"
      - "traefik.http.services.maildev.loadbalancer.server.port=80"

  traefik:
    image: traefik:latest
    container_name: setup_traefik
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.deployment/docker/containers/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./.deployment/docker/containers/traefik/config.yml:/etc/traefik/config.yml:ro
      - certs:/etc/ssl/traefik
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"

  reverse-proxy-https-helper:
    container_name: setup_reverse_proxy
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - traefik
      - service

  glitchtip_web:
    container_name: setup_glitchtip_web
    image: glitchtip/glitchtip
    depends_on:
      - glitchtip_postgres
      - glitchtip_redis
    ports:
      - "8989:8989"
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - traefik
      - service
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.glitchtip.rule=Host(`glitchtip.traefik.me`)"
      - "traefik.http.routers.glitchtip.tls=true"
      - "traefik.http.services.glitchtip.loadbalancer.server.port=8989"

  glitchtip_worker:
    container_name: setup_glitchtip_worker
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    env_file:
      - .env
    depends_on:
      - glitchtip_postgres
      - glitchtip_redis
    restart: unless-stopped

  glitchtip_postgres:
    container_name: setup_glitchtip_postgres
    image: postgres:15
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data

  glitchtip_redis:
    container_name: setup_glitchtip_redis
    image: redis
    restart: unless-stopped

  glitchtip_migrate:
    container_name: setup_glitchtip_migrate
    image: glitchtip/glitchtip
    env_file:
      - .env
    depends_on:
      - glitchtip_postgres
      - glitchtip_redis
    command: "./manage.py migrate"

volumes:
  rabbitmq_volume: {}
  certs: {}
  pg-data: {}

networks:
  service:
    name: service
  traefik:
    name: traefik
