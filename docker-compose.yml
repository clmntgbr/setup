version: '3.5'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"

services:
  rabbitmq:
    restart: unless-stopped
    container_name: setup_rabbitmq
    image: rabbitmq:3-management
    hostname: rabbitmq
    networks:
      - traefik
      - service
    ports:
      - "25672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.traefik.me`)"
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  maildev:
    restart: unless-stopped
    container_name: setup_maildev
    image: maildev/maildev
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    networks:
      - traefik
      - service
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.maildev.rule=Host(`maildev.traefik.me`)"
      - "traefik.http.routers.maildev.tls=true"
      - "traefik.http.services.maildev.loadbalancer.server.port=80"

  traefik:
    image: traefik:latest
    container_name: setup_traefik
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.deployment/docker/containers/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./.deployment/docker/containers/traefik/config.yml:/etc/traefik/config.yml:ro
      - certs:/etc/ssl/traefik
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"

  reverse-proxy-https-helper:
    container_name: setup_reverse_proxy
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - traefik
      - service

  glitchtip-postgres:
    image: postgres:15
    container_name: setup_glitchtip_postgres
    restart: unless-stopped
    volumes:
      - glitchtip:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - traefik
      - service
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
    logging: *default-logging

  glitchtip-redis:
    image: redis
    container_name: setup_glitchtip_redis
    restart: unless-stopped
    networks:
      - traefik
      - service
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    logging: *default-logging

  glitchtip-web:
    image: glitchtip/glitchtip
    container_name: setup_glitchtip
    restart: unless-stopped
    depends_on:
      traefik:
        condition: service_started
      glitchtip-postgres:
        condition: service_healthy
      glitchtip-redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
      REDIS_URL: redis://glitchtip-redis:6379/0
      SECRET_KEY: jsdf93892309fhufhr
      PORT: 8000
      EMAIL_URL: ${EMAIL_URL}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
      ENABLE_OPEN_USER_REGISTRATION: "False"
      GLITCHTIP_MAX_EVENT_LIFE_DAYS: 90
    networks:
      - traefik
      - service
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.glitchtip.rule=Host(`glitchtip.traefik.me`)'
      - 'traefik.http.routers.glitchtip.entrypoints=https'
      - 'traefik.http.routers.glitchtip.tls=true'
      - 'traefik.http.services.glitchtip-service.loadbalancer.server.port=8000'
    logging: *default-logging

  glitchtip-worker:
    image: glitchtip/glitchtip
    container_name: setup_glitchtip_worker
    restart: unless-stopped
    command: celery -A glitchtip worker -B -l INFO
    depends_on:
      glitchtip-postgres:
        condition: service_healthy
      glitchtip-redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
      REDIS_URL: redis://glitchtip-redis:6379/0
      SECRET_KEY: jsdf93892309fhufhr
      PORT: 8000
      EMAIL_URL: ${EMAIL_URL}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
    networks:
      - traefik
      - service
    logging: *default-logging

  glitchtip-migrate:
    image: glitchtip/glitchtip
    container_name: setup_glitchtip_migrate
    depends_on:
      glitchtip-postgres:
        condition: service_healthy
      glitchtip-redis:
        condition: service_healthy
    command: "./manage.py migrate"
    environment:
      DATABASE_URL: postgres://postgres:postgres@glitchtip-postgres:5432/postgres
      REDIS_URL: redis://glitchtip-redis:6379/0
      SECRET_KEY: jsdf93892309fhufhr
      PORT: 8000
      EMAIL_URL: ${EMAIL_URL}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
    networks:
      - traefik
      - service
    logging: *default-logging

volumes:
  rabbitmq_volume: {}
  certs: {}
  glitchtip:


networks:
  service:
    name: service
  traefik:
    name: traefik
